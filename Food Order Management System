#include <stdio.h>
#include <string.h>

#define MAX_ITEMS 10
#define MAX_ORDERS 100

// Structure to represent a menu item
typedef struct {
    int id;
    char name[50];
    float price;
} MenuItem;

// Structure to represent an order item
typedef struct {
    int itemId;
    int quantity;
} OrderItem;

// Structure to represent an order
typedef struct {
    int orderId;
    OrderItem items[MAX_ITEMS];
    int itemCount;
    float totalAmount;
    char status[20];
} Order;

// Global variables
MenuItem menu[MAX_ITEMS];
Order orders[MAX_ORDERS];
int menuCount = 0;
int orderCount = 0;

// Function prototypes
void initializeMenu();
void displayMenu();
void placeOrder();
void displayOrder();
void checkOrderStatus();

int main() {
    int choice;

    initializeMenu();

    while (1) {
        printf("\n=== Food Order Management System ===\n");
        printf("1. View Menu\n");
        printf("2. Place Order\n");
        printf("3. Display Orders\n");
        printf("4. Check Order Status\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                displayMenu();
                break;
            case 2:
                placeOrder();
                break;
            case 3:
                displayOrder();
                break;
            case 4:
                checkOrderStatus();
                break;
            case 5:
                printf("Exiting the program. Thank you!\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}

void initializeMenu() {
    // Pre-defined menu items
    menu[0] = (MenuItem){1, "Burger", 5.99};
    menu[1] = (MenuItem){2, "Pizza", 8.99};
    menu[2] = (MenuItem){3, "Pasta", 6.49};
    menu[3] = (MenuItem){4, "Salad", 4.99};
    menu[4] = (MenuItem){5, "Soda", 1.99};

    menuCount = 5;
}

void displayMenu() {
    printf("\n=== Menu ===\n");
    for (int i = 0; i < menuCount; i++) {
        printf("%d. %s - $%.2f\n", menu[i].id, menu[i].name, menu[i].price);
    }
}

void placeOrder() {
    if (orderCount >= MAX_ORDERS) {
        printf("Maximum order limit reached. Cannot place more orders.\n");
        return;
    }

    Order newOrder;
    newOrder.orderId = orderCount + 1;
    newOrder.itemCount = 0;
    newOrder.totalAmount = 0.0;
    strcpy(newOrder.status, "Pending");

    printf("\nEnter the number of items to order: ");
    int numItems;
    scanf("%d", &numItems);

    for (int i = 0; i < numItems; i++) {
        int itemId, quantity;
        printf("Enter item ID: ");
        scanf("%d", &itemId);
        printf("Enter quantity: ");
        scanf("%d", &quantity);

        int found = 0;
        for (int j = 0; j < menuCount; j++) {
            if (menu[j].id == itemId) {
                newOrder.items[newOrder.itemCount].itemId = itemId;
                newOrder.items[newOrder.itemCount].quantity = quantity;
                newOrder.itemCount++;
                newOrder.totalAmount += menu[j].price * quantity;
                found = 1;
                break;
            }
        }

        if (!found) {
            printf("Invalid item ID. Please try again.\n");
            i--;
        }
    }

    orders[orderCount++] = newOrder;
    printf("Order placed successfully! Your order ID is %d.\n", newOrder.orderId);
}

void displayOrder() {
    if (orderCount == 0) {
        printf("No orders placed yet.\n");
        return;
    }

    printf("\n=== Orders ===\n");
    for (int i = 0; i < orderCount; i++) {
        printf("Order ID: %d\n", orders[i].orderId);
        printf("Items:\n");
        for (int j = 0; j < orders[i].itemCount; j++) {
            int itemId = orders[i].items[j].itemId;
            int quantity = orders[i].items[j].quantity;
            for (int k = 0; k < menuCount; k++) {
                if (menu[k].id == itemId) {
                    printf("  %s x %d\n", menu[k].name, quantity);
                    break;
                }
            }
        }
        printf("Total Amount: $%.2f\n", orders[i].totalAmount);
        printf("Status: %s\n\n", orders[i].status);
    }
}

void checkOrderStatus() {
    printf("\nEnter order ID to check status: ");
    int orderId;
    scanf("%d", &orderId);

    for (int i = 0; i < orderCount; i++) {
        if (orders[i].orderId == orderId) {
            printf("Order ID: %d\n", orderId);
            printf("Status: %s\n", orders[i].status);
            return;
        }
    }

    printf("Order ID not found.\n");
}
